<? String.prototype.endsWith = function(suffix) {
    return this.match(suffix+"$") == suffix;
}; ?>

<? docfiles.forEach(function(doc) { ?>

  <!-- Start <?= doc.filename ?> -->
  # <?= doc.filename ?>

  <? doc.javadoc.forEach(function(comment) { ?>
    <? if (!comment.ignore) { ?>
      <? if (comment.name) { ?>

        <? if (comment.isMethod ) { ?>
          ## Method: <?= comment.name ?>(<?= comment.paramStr ?>)
        <? } else if (comment.isFunction) { ?>
          ## Function: <?= comment.name ?>(<?= comment.paramStr ?>)
        <? } else if (comment.name.endsWith(".js")) { ?>

        <? } else { ?>
          ## Class: <?= comment.name ?>
        <? } ?>

      <? } ?>

        <?= comment.description ?>

        <? if (comment.deprecated) { ?>
          **Deprecated**
        <? } ?>

        <? if (comment.author) { ?>
          Author: <?- comment.author ?>
        <? } ?>

        <? if (comment.version) { ?>
          Version: <?= comment.version ?>
        <? } ?>

        <? if (comment.see) { ?>
          See: <?= comment.see ?>
        <? } ?>

      <? if (comment.propertyTags.length > 0) { ?>
        ### Properties:
        <? comment.propertyTags.forEach(function(propertyTag) { ?>
          * **<?= propertyTag.joinedTypes ?>** *<?= propertyTag.name ?>* <?= propertyTag.description ?><? }) ?>
      <? } ?>

      <? if (comment.paramTags.length > 0) { ?>
        ### Params:
        <? comment.paramTags.forEach(function(paramTag) { ?>
          *<? if (paramTag.types.length > 0) { ?> **<?= paramTag.joinedTypes ?>**<? } ?> *<?= paramTag.name ?>* <?= paramTag.description ?><? }) ?>
      <? } ?>

      <? if (comment.returnTags.length > 0) { ?>
        ### Return:
        <? comment.returnTags.forEach(function(returnTag) { ?>
          *<? if (returnTag.types.length > 0) { ?> **<?= returnTag.joinedTypes ?>**<? } ?> <?= returnTag.description ?>
        <? }) ?>
      <? } ?>
    <? } ?>
  <? }) ?>

  <!-- End <?= doc.filename ?> -->

<? }) ?>